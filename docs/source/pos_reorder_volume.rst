The purpose of this class is to change order of slices of given volume
along specified axis according to a provided mapping.

Usage examples
==============

.. highlight:: bash


Usage summary
-------------

All supported features in one invocation (an example) ::

    $pos_reorder_volume.py  -i input.nii.gz \
                            -o output.nii.gz\
    [filename]              --mapping mapping_file.txt\
    [allowed values: 1,2,3] --sliceAxisIndex 1


Simple usage example
--------------------

A minimal valid invocation would look like this::

    $pos_reorder_volume.py -i input.nii.gz \
                            -o output.nii.gz

The invocation will load the `input.nii.gz` image, shuffle the slices along
the '0' axis of the image (the default one) and save a new image under the
name `output.nii.gz`


Input image type
----------------

The script supports both grayscale and multichannel volumes. In case of
grayscale images, any type supported by python `itk` wrappers should be
processed successfully. Regarding the multichannel volumes, the only
supported type is a `uchar` rgb image. The output volume type is the same
as the input volume type.


Mapping file
------------

The reordering may be driven by a mapping provided using `--mapping`
option::

    $pos_reorder_volume.py  -i input.nii.gz \
                            -o output.nii.gz\
                            --mapping mapping_file.txt

Will cause the script to use `mapping_file.txt` to reorder the slices. See
below for the requirements regarding the format of the mapping file.


Format of the mapping file
--------------------------

The mapping file should be a typical CSV file wich either comma, space or
tab as a delimiter. No header lines and no comments are allowed. The file
has contains two columns. The first column denotes the index of the slice
in the *output* (target) image. The second column defines the *input* slice
index. Therefore, number of lines has to be the same
as the number of slices to reorder and entry in the first column is, in
fact, the line number. More formally, the mapping has to satisfy the
following conditions:

    - the mapping starts from slice no 1.
    - the length of the mapping is the same as the number of the
        slices along the slicing plane.
    - the mapping contains an exactly one entry for each of the output
        slices.


Reordering the volume randomly
------------------------------
If no mapping file is provided, the mapping generated by randomly permuting
the initial slice order.

